{"version":3,"sources":["components/utils/NavLinkButton.js","components/layout/SideMenu.js","components/_helpers/AssestsHelper.js","components/layout/header/LeftSideNav.js","components/layout/header/RightSideNav.js","components/layout/header/Header.js","components/layout/Layout.js","components/links/Link.js","components/links/editPage/LinkEdit.js","components/_helpers/ValidateImage.js","components/utils/Alert.js","components/_helpers/is-empty.js","components/links/editPage/EditPage.js","services/api.js","components/links/Category.js","components/links/DisplayLinks.js","components/news/Article.js","components/news/Search.js","services/newsAPI.js","components/news/News.js","components/utils/ImageLink.js","components/main-page/MainPageLinks.js","components/main-page/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["NavLinkButton","to","name","exact","className","activeClassName","SideMenu","React","useState","toggleMenu","setToggleMenu","toggleDrawer","open","event","type","key","onClick","SwipeableDrawer","anchor","onClose","onOpen","role","onKeyDown","Button","variant","toAbsoluteUrl","pathname","process","LeftSideNav","alt","src","RightSideNav","Header","Layout","props","children","PropsType","childern","func","Link","url","imgSrc","href","target","rel","Date","now","string","LinkEdit","link","index","setLink","errors","clearError","setErrors","hiddenFileInput","useRef","previewFile","setPreviewFile","_handleChange","id","value","file","files","undefined","URL","createObjectURL","errorMessage","message","size","validateImage","errorCopy","prevState","TextField","label","onChange","style","display","ref","IconButton","color","aria-label","component","current","click","imgsrc","Divider","object","number","Alert","elevation","AlertMessage","alert","setAlert","handleClose","Snackbar","autoHideDuration","anchorOrigin","horizontal","vertical","severity","PropsTypes","isEmpty","Object","keys","length","trim","EditPage","title","links","categoryNumber","setSubmitForm","toggleEditPage","setToggleEditPage","categoryTitle","setCategoryTitle","categoryLinks","setCategoryLinks","useEffect","link1","link2","link3","link4","link5","atr","linkCopy","onSubmit","preventDefault","formData","FormData","set","forEach","append","JSON","stringify","Axios","post","updateCategoryData","then","res","status","catch","err","response","data","list","evt","required","map","Dialog","scroll","aria-labelledby","aria-describedby","DialogTitle","DialogContent","Category","urls","submitForm","setlinks","get","getCategory","categorylinks","orientation","DisplayLinks","categories","setCategories","item","_id","Article","article","loading","CircularProgress","urlToImage","substring","source","bool","SearchComponent","inputValue","setInputValue","Paper","InputBase","placeholder","inputProps","onKeyPress","onSearch","flexItem","getNews","subject","date","fromDate","getFullYear","getMonth","getDate","News","articles","setArticles","setLoading","setMessage","slice","console","log","fetchData","marginLeft","marginRight","fontFamily","ImageLink","MainPageLinks","MainPage","coronaArticles","setCoronaArticles","getDay","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.5de208ce.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport propTypes from 'prop-types';\r\nimport '../layout/layout-styles.scss'\r\n\r\nconst NavLinkButton = ({ to, name }) => {\r\n  return (\r\n    <NavLink exact className=\"nav-button\"   activeClassName=\"nav-button--active\"  to={to}>\r\n      {name}\r\n    </NavLink>\r\n  )\r\n}\r\n\r\nNavLinkButton.propTypes ={\r\n  to:propTypes.string,\r\n  name: propTypes.string\r\n}\r\n\r\n\r\nexport default NavLinkButton\r\n\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Button from '@material-ui/core/Button'\r\n\r\n\r\nimport './layout-styles.scss'\r\n\r\n\r\nconst SideMenu=()=> {\r\n    const [toggleMenu, setToggleMenu] = React.useState(false);\r\n\r\n\r\n    const toggleDrawer = (open) => (event) => {\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        setToggleMenu(open)\r\n    };\r\n\r\n    // List in the backdrop\r\n    const list = () => (\r\n        <div\r\n            className=\"side-nav-menu-container\"\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(false)}\r\n            onKeyDown={toggleDrawer(false)}\r\n        >\r\n            <ul className=\"menu-nav\">\r\n                <li>\r\n                <Link to='/' >\r\n                <h3>Dashboard</h3>\r\n                    </Link>\r\n            </li>\r\n                <li>\r\n                <Link to='/links' >\r\n                    <h3>Links</h3>\r\n                </Link>\r\n            </li>\r\n                <li>\r\n                <Link to=\"/news\" >\r\n                <h3>News</h3>\r\n                    </Link>\r\n            </li>\r\n            </ul>\r\n            <Button variant=\"contained\" onClick={toggleDrawer(false)}>Close</Button>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"toggle-button\">\r\n            <button onClick={toggleDrawer(true)}  >\r\n                <MenuIcon />\r\n            </button>\r\n            <SwipeableDrawer\r\n                anchor='left'\r\n                open={toggleMenu}\r\n                onClose={toggleDrawer(false)}\r\n                onOpen={toggleDrawer(true)}\r\n                onClick={toggleDrawer(false)}\r\n            >\r\n                {list()}\r\n            </SwipeableDrawer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default SideMenu","export const removeCSSClass=(ele, cls)=> {\r\n    const reg = new RegExp(\"(\\\\s|^)\" + cls + \"(\\\\s|$)\");\r\n    ele.className = ele.className.replace(reg, \" \");\r\n}\r\n\r\nexport const  addCSSClass=(ele, cls)=> {\r\n    ele.classList.add(cls);\r\n}\r\n\r\nexport const toAbsoluteUrl = pathname => process.env.PUBLIC_URL + pathname;\r\n","import React from 'react'\r\nimport NavLinkButton from '../../utils/NavLinkButton';\r\nimport SideNavMenu from '../SideMenu'\r\nimport { toAbsoluteUrl } from '../../_helpers/AssestsHelper'\r\n\r\nconst LeftSideNav=()=> {\r\n  return (\r\n    <div className=\"nav-left-side\">\r\n      <SideNavMenu />\r\n      <img\r\n        alt=\"Logo\"\r\n        src={toAbsoluteUrl(\"/media/misc/circle.png\")}\r\n      />\r\n      <NavLinkButton to={\"/\"} name={\"Home\"} />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LeftSideNav;","import React from 'react'\r\nimport NavLinkButton from '../../utils/NavLinkButton'\r\n\r\n\r\nconst RightSideNav=()=> {\r\n    return (\r\n        <div className=\"nav-right-buttons\">\r\n            \r\n            <NavLinkButton to=\"/links\" name=\"Links\"/>\r\n            <NavLinkButton to=\"/news\" name=\"News\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default RightSideNav;","import React  from 'react';\r\n\r\nimport NavLeftSide from './LeftSideNav'\r\nimport NavRightSide from './RightSideNav'\r\n\r\nimport '../layout-styles.scss'\r\n\r\nconst Header = () => {\r\n  \r\n\r\n  return (\r\n \r\n    <nav className=\"header-container\">\r\n      <NavLeftSide />\r\n      <NavRightSide />\r\n    </nav>\r\n\r\n\r\n  );\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nimport PropsType from 'prop-types'\r\nimport Header from './header/Header';\r\n\r\nimport './layout-styles.scss'\r\n\r\n\r\n\r\nconst Layout=(props)=> {\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    <div className='layout-container'>\r\n      <Header />\r\n      <div className=\"main-container\">\r\n        {props.children}\r\n      </div>\r\n      <footer className=\"footer-container\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nLayout.PropsType={\r\n  childern:PropsType.func\r\n}\r\n\r\nexport default Layout","import React from 'react';\r\nimport PropsType from 'prop-types'\r\nimport './links-page-style.scss'\r\n\r\n\r\nconst Link = ({ name, url,imgSrc }) => {\r\n    \r\n    \r\n    return (\r\n        <div className='link-container'>\r\n            <a href={`https://${url}`} target='_blank' rel=\"noopener noreferrer\">  \r\n                <button className='link-button-style'>\r\n                    <img key={Date.now()} src={\"http://localhost:5000/\"+imgSrc} className=\"img-style\"  alt=\"Missing\"  />\r\n                    <span>{name}</span>\r\n                </button>\r\n            </a>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nLink.PropsType={\r\n    name:PropsType.string, \r\n    url:PropsType.string,\r\n    imgSrc:PropsType.string \r\n}\r\nexport default Link;\r\n","import React, { useState } from 'react'\r\nimport PropsType from 'prop-types'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Divider from '@material-ui/core/Divider';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera'\r\nimport IconButton from '@material-ui/core/IconButton'\r\n\r\nimport { toAbsoluteUrl } from '../../_helpers/AssestsHelper';\r\nimport { validateImage } from '../../_helpers/ValidateImage';\r\nimport '../links-page-style.scss';\r\n\r\nconst LinkEdit =({ link, index, setLink, errors, clearError, setErrors })=> {\r\n\r\n    const hiddenFileInput = React.useRef(null);\r\n\r\n    const [previewFile, setPreviewFile] = useState(null)\r\n\r\n\r\n    const _handleChange = (event) => {\r\n        switch (event.target.id) {\r\n            case \"edit-name-link\": {\r\n                setLink(index,'name',event.target.value)\r\n                clearError(index, 'name')\r\n                break;\r\n            }\r\n            case \"edit-url-link\": {\r\n                setLink(index,'url',event.target.value)\r\n                clearError(index, 'url')\r\n               \r\n                break;\r\n            }\r\n            case \"upload-button\": {\r\n                let file = event.target.files[0];\r\n                if (file !== undefined && file !== null) {\r\n                    let url = URL.createObjectURL(event.target.files[0])\r\n                    let errorMessage = validateImage(file);\r\n                    setPreviewFile(url);\r\n                    setLink(index,'file',file)\r\n\r\n                    if (errorMessage !== '') {\r\n                        let errorCopy = errors\r\n                        errorCopy.file = errorMessage;\r\n                       \r\n                        setErrors((prevState) => ({\r\n                            ...prevState, ['link' + index]: errorCopy\r\n                        }))\r\n                    }\r\n                    else {\r\n                        clearError(index, 'image')\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n             default:{\r\n                    break;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n   \r\n    return (\r\n        <>\r\n            <h4>Link Number {index} </h4>\r\n            <TextField id=\"edit-name-link\" label={`Link ${index} Name`} value={link.name} onChange={(event) => _handleChange(event)} />\r\n            {errors.name ? <div className=\"invalid-feedback\">{errors.name}</div> : ''}\r\n            <TextField id=\"edit-url-link\" label={`Link ${index} URL`} value={link.url} onChange={(event) => _handleChange(event)} />\r\n            {errors.url ? <div className=\"invalid-feedback\">{errors.url}</div> : ''}\r\n\r\n            <div className=\"edit-page-photo-container\">\r\n                <input\r\n                    type=\"file\"\r\n                    id=\"upload-button\"\r\n                    onChange={(event) => _handleChange(event)}\r\n                    style={{ display: 'none' }}\r\n                    ref={hiddenFileInput}\r\n\r\n\r\n                />\r\n                <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick={() => {\r\n                    hiddenFileInput.current.click();\r\n                }} >\r\n                    Select Image < PhotoCamera />\r\n\r\n                </IconButton>\r\n                <img id=\"edit-image-link\" src={previewFile ? previewFile : toAbsoluteUrl(`http://localhost:5000/${link.imgsrc}`)} className=\"img-style\" alt=\"Missing\" onChange={(event) => _handleChange(event)} />\r\n            </div>\r\n            {errors.file ? <div className=\"invalid-feedback\">{errors.file}</div> : ''}\r\n            <Divider />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nLinkEdit.PropsType={\r\n    link:PropsType.object, \r\n    index:PropsType.number, \r\n    setLink: PropsType.setLink, \r\n    errors:PropsType.object, \r\n    clearError:PropsType.func, \r\n    setErrors:PropsType.func\r\n}\r\n\r\nexport default LinkEdit","\r\nconst MAX_SIZE= 2*1024*1024;\r\n\r\nexport const validateImage = (file)=> {\r\n    \r\n    let message='';\r\n    \r\n    if (file.size>MAX_SIZE){\r\n        \r\n        message=\"Invaild : File too large to upload. The maximum size is 2MB\";\r\n    }\r\n    if (file.type !== \"image/png\" && file.type !== \"image/jpg\" && file.type !== \"image/jpeg\") {\r\n        message='Only .png, .jpg and .jpeg format allowed!';\r\n    }\r\n    return message;\r\n   \r\n\r\n    \r\n}\r\n","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport PropsTypes from 'prop-types'\r\nimport '../shared.scss';\r\n\r\n\r\nconst Alert=(props)=> {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst  AlertMessage=({alert,setAlert})=> {\r\n  const handleClose = () => {\r\n   setAlert(prevState=>{\r\n    return {...prevState,\r\n        open:false}\r\n   })\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"alert-message\">\r\n      <Snackbar open={alert.open} autoHideDuration={4000} onClose={handleClose} anchorOrigin={{horizontal:'center',vertical:'top'}}>\r\n            <Alert onClose={handleClose} severity={alert.type==='error'?\"error\":\"success\"}>\r\n          {alert.message}\r\n        </Alert>\r\n      </Snackbar>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nAlertMessage.PropsTypes = {\r\n  alert:PropsTypes.object,\r\n  setAlert: PropsTypes.func\r\n  \r\n}\r\nexport default AlertMessage;","export const isEmpty =(value) =>\r\nvalue ===undefined || value ===null || \r\n(typeof value === 'object' && Object.keys(value).length ===0) ||\r\n(typeof value === 'string' && value.trim().length === 0);\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport LinkEdit from './LinkEdit';\r\nimport Alert from '../../utils/Alert';\r\n\r\nimport { isEmpty } from '../../_helpers/is-empty';\r\nimport '../links-page-style.scss'\r\n\r\n\r\n\r\n\r\nimport { updateCategoryData } from '../../../services/api';\r\n\r\n\r\nconst EditPage = ({ title, links, categoryNumber, id, setSubmitForm }) => {\r\n\r\n    const [toggleEditPage, setToggleEditPage] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [categoryTitle, setCategoryTitle] = useState(\"\");\r\n    const [categoryLinks, setCategoryLinks] = useState({})\r\n    const [alert, setAlert] = useState({\r\n        type: '',\r\n        message: '',\r\n        open: false\r\n    })\r\n    useEffect(() => {\r\n\r\n        if (toggleEditPage) {\r\n            setErrors({ link1: {}, link2: {}, link3: {}, link4: {}, link5: {} })\r\n            setCategoryTitle(title);\r\n            setCategoryLinks({\r\n                link1: {\r\n                    name: links['link1'].name,\r\n                    imgsrc: links['link1'].imgsrc,\r\n                    url: links['link1'].url\r\n                },\r\n                link2: {\r\n                    name: links['link2'].name,\r\n                    imgsrc: links['link2'].imgsrc,\r\n                    url: links['link2'].url\r\n                },\r\n                link3: {\r\n                    name: links['link3'].name,\r\n                    imgsrc: links['link3'].imgsrc,\r\n                    url: links['link3'].url\r\n                },\r\n                link4: {\r\n                    name: links['link4'].name,\r\n                    imgsrc: links['link4'].imgsrc,\r\n                    url: links['link4'].url\r\n                },\r\n                link5: {\r\n                    name: links['link5'].name,\r\n                    imgsrc: links['link5'].imgsrc,\r\n                    url: links['link5'].url\r\n                }\r\n            });\r\n        }\r\n    }, [toggleEditPage,title,links])\r\n\r\n    const toggleDrawer = (open) => event => {\r\n        setToggleEditPage(open)\r\n    };\r\n\r\n    const setLink = (index, atr, value) => {\r\n        let linkCopy = categoryLinks['link' + index];\r\n\r\n        linkCopy[atr] = value;\r\n        setCategoryLinks(prevState => {\r\n            return { ...prevState, ['link' + index]: linkCopy }\r\n        })\r\n    }\r\n\r\n    const clearError = (index, type) => {\r\n        const linkCopy = errors['link' + index];\r\n\r\n        switch (type) {\r\n            case 'name': {\r\n                delete linkCopy.name\r\n                break;\r\n            }\r\n            case 'url': {\r\n                delete linkCopy.url\r\n                break;\r\n            }\r\n            case 'image': {\r\n                delete linkCopy.file\r\n                break;\r\n            }\r\n            default: {\r\n                break;\r\n            }\r\n        }\r\n        setErrors({\r\n            ...errors, ['link' + index]: { ...linkCopy }\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n    const onChange = (event) => {\r\n\r\n        if (event.target.value.length < 24)\r\n            setCategoryTitle(event.target.value);\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        let formData = new FormData();\r\n        formData.set('title', categoryTitle);\r\n        formData.set('_id', id);\r\n\r\n        Object.keys(categoryLinks).forEach((link, index) => {\r\n\r\n            if (categoryLinks[link].file) {\r\n                formData.append('images', categoryLinks[link].file, \"link\" + (index + 1) + \".png\");\r\n            }\r\n            formData.append('link' + (index + 1), JSON.stringify({\r\n                name: categoryLinks[link].name,\r\n                url: categoryLinks[link].url,\r\n                imgsrc: categoryLinks[link].imgsrc\r\n            }));\r\n\r\n        });\r\n\r\n        if (isEmpty(errors.link1) && isEmpty(errors.link2) && isEmpty(errors.link3) && isEmpty(errors.link4) && isEmpty(errors.link5)) {\r\n\r\n            updateCategoryData(categoryNumber, formData).then(res => {\r\n             \r\n                if (res.status === 200) {\r\n                    setSubmitForm(prevState => {\r\n                        return !prevState\r\n                    })\r\n\r\n                    setAlert({\r\n                        open: true,\r\n                        type: 'success',\r\n                        message: 'Update success'\r\n                    });\r\n                    setToggleEditPage(false);\r\n\r\n\r\n                }\r\n            }).catch(err => {\r\n                setErrors(err.response.data)\r\n\r\n                setAlert({\r\n                    open: true,\r\n                    type: 'error',\r\n                    message: 'Error update category'\r\n                });\r\n\r\n            });\r\n        }\r\n        else {\r\n            setAlert({\r\n                open: true,\r\n                type: 'error',\r\n                message: 'Please fix the highlighted errors before submit'\r\n            });\r\n        }\r\n    }\r\n\r\n    // List in the backdrop\r\n    const list = (\r\n        <div className=\"link-page-edit-page-container\">\r\n\r\n            <form className=\"edit-page-form-style\" onSubmit={(evt) => onSubmit(evt)} >\r\n                <TextField required id=\"standard-required\" label=\"Title\" value={categoryTitle} onChange={(event) => onChange(event)} />\r\n                {Object.keys(categoryLinks).map((key, index) => {\r\n                    return <LinkEdit key={`link-edit${index}`} link={categoryLinks[key]} setLink={setLink} index={index + 1} errors={errors[key]} clearError={clearError} />\r\n                })}\r\n                <Button size=\"small\" type=\"submit\" variant=\"contained\" color=\"primary\">Submit</Button>\r\n                <Button size=\"medium\" onClick={toggleDrawer(false)} variant=\"contained\" color=\"secondary\">Close</Button>\r\n            </form>\r\n\r\n        </div>\r\n    );\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"link-page-edit-button-container\">\r\n            <IconButton onClick={toggleDrawer(true)} className=\"link-page-edit-button\">\r\n                <EditIcon />\r\n            </IconButton>\r\n            <Dialog\r\n                open={toggleEditPage}\r\n                onClose={() => setToggleEditPage(false)}\r\n                scroll='paper'\r\n                aria-labelledby=\"scroll-dialog-title\"\r\n                aria-describedby=\"scroll-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"dialog-title\" >Edit Category</DialogTitle>\r\n                <DialogContent>\r\n                    {list}\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Alert alert={alert} setAlert={setAlert} />\r\n        </div>\r\n    );\r\n}\r\nEditPage.propTypes = {\r\n    title: PropTypes.string,\r\n    links: PropTypes.object,\r\n    categoryNumber: PropTypes.number,\r\n    id: PropTypes.string,\r\n    setSubmitForm: PropTypes.func,\r\n    setAlert: PropTypes.func\r\n}\r\nexport default EditPage;\r\n\r\n\r\n\r\n","import Axios from 'axios';\r\n\r\n\r\n\r\n\r\n\r\nexport const updateCategoryData=(categoryNumber,formData)=>{\r\n     return Axios.post('http://localhost:5000/api/category/update/' + categoryNumber, formData)\r\n    };\r\n\r\n\r\n\r\nexport const getAllCategories = ()=>{\r\n     return Axios.get('http://localhost:5000/api/category/all')\r\n    }\r\n\r\nexport const getCategory = (id)=>{\r\n     return Axios.get('http://localhost:5000/api/category/'+id)\r\n    }","import React,{useEffect,useState} from 'react'\r\nimport PropsTypes from 'prop-types'\r\n\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport Link from './Link'\r\nimport EditPage from './editPage/EditPage'\r\n\r\nimport {getCategory} from '../../services/api'\r\n\r\n\r\n\r\n\r\n\r\nconst Category = ({ urls, title ,categoryNumber,id, setAlert}) => {\r\n\r\nconst [submitForm,setSubmitForm] = useState(false)\r\nconst [categoryTitle,setCategoryTitle] =  useState(title);\r\nconst [links,setlinks] = useState(urls);\r\n\r\n    //Get the list from the props\r\n    \r\n    useEffect(() => {\r\n\r\n        getCategory(id)\r\n        .then((res)=>{\r\n                setCategoryTitle(res.data.title)\r\n                setlinks(res.data.categorylinks);\r\n        })\r\n        .catch(err=>{\r\n            setAlert({\r\n                open:true,\r\n                type:'error',\r\n                message:err\r\n            });\r\n        })\r\n    }, [submitForm,id,setAlert])\r\n\r\n\r\n    let categoryLinks = Object.keys(links).map((key,index)=> {\r\n          \r\n            return <Link key={`link${index}`} \r\n            name={links[key].name} \r\n            url={links[key].url} \r\n            imgSrc={links[key].imgsrc}\r\n            ></Link>\r\n        });\r\n   \r\n\r\n        \r\n       \r\n    //Data from json to each url\r\n    return (\r\n        <div className=\"links-container\" >\r\n             <EditPage \r\n             title={categoryTitle} \r\n             links={links} \r\n             categoryNumber={categoryNumber} \r\n             id={id}\r\n             setSubmitForm={setSubmitForm}\r\n            \r\n             ></EditPage>\r\n\r\n            <h2>\r\n                {categoryTitle}\r\n            </h2>\r\n            <Divider orientation=\"horizontal\" />\r\n            <div className=\"links-buttons-container\" >\r\n                {categoryLinks}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nCategory.PropsTypes={\r\n    urls:PropsTypes.object, \r\n    title :PropsTypes.string,\r\n    categoryNumber:PropsTypes.number,\r\n    id:PropsTypes.string, \r\n    setAlert:PropsTypes.func\r\n}\r\n\r\n\r\nexport default Category;","import React, { useState, useEffect } from 'react';\r\nimport Category from './Category';\r\n\r\nimport { toAbsoluteUrl } from '../_helpers/AssestsHelper';\r\nimport Alert from '../utils/Alert';\r\n\r\nimport {getAllCategories} from '../../services/api'\r\n\r\nconst DisplayLinks = () => {\r\n    const [categories, setCategories] = useState([]);\r\n    const [alert, setAlert] = useState({\r\n        type: '',\r\n        message: '',\r\n        open: false\r\n    })\r\n\r\n    useEffect(() => {\r\n        getAllCategories()\r\n            .then((res) => {\r\n                setCategories(res.data)\r\n            }).catch(err => {\r\n\r\n                setAlert({\r\n                    open: true,\r\n                    type: 'error',\r\n                    message: \"Can't fetch from the server\"\r\n                })\r\n            })\r\n\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"links-display-container\">\r\n            <Alert alert={alert} setAlert={setAlert} />\r\n            <h1>\r\n                SITES LINKS\r\n            </h1>\r\n            <img src={toAbsoluteUrl('/media/misc/worldImage.png')} alt=\"World Map\" className=\"links-title-image\" />\r\n            <div className=\"link-catagory-container\">\r\n                {categories.length === 0 ? '' : categories.map((item, index) => {\r\n                    return <Category key={index}\r\n                        urls={item.categorylinks}\r\n                        title={item.title}\r\n                        id={item._id}\r\n                        categoryNumber={index + 1}\r\n                        setAlert={setAlert} />\r\n                })}\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default DisplayLinks;\r\n","import React from 'react'\r\nimport PropsTypes from 'prop-types' \r\nimport { CircularProgress } from '@material-ui/core'\r\n\r\nconst Article=({ article,loading })=> {\r\n    \r\n   \r\n    return (\r\n        <div className=\"article-container\">\r\n            <a href={article.url} target=\"_blank\"  rel=\"noopener noreferrer\">\r\n                <div className='article-content-container'>\r\n                    {(loading)?<CircularProgress size={80} />:<img  src={article.urlToImage?article.urlToImage:'/media/misc/not_available.png'} alt=\"\" />}\r\n                    <div>\r\n                    <p>{article.title.substring(0,50)}</p>\r\n                    <span>{article.source.name}</span>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </a>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\nArticle.PropsTypes = {\r\n    article:PropsTypes.object,\r\n    loading:PropsTypes.bool\r\n\r\n}\r\nexport default Article","import React ,{useState} from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport PropTypes  from 'prop-types'\r\n\r\n\r\nconst SearchComponent = (props) =>{\r\n\r\nconst [inputValue,setInputValue] = useState(\"Corona\");\r\n\r\n\r\n\r\nconst onChange=(event)=>{\r\n    setInputValue(event.target.value)\r\n}\r\nconst onKeyPress=(event)=>{\r\n  if(event.key==='Enter')\r\n    props.onSearch(event,inputValue);\r\n}\r\n \r\n  return (\r\n    <Paper className=\"search-container\" >\r\n      <InputBase\r\n        className=\"text-box\"\r\n        placeholder=\"Search News by keywords\"\r\n        inputProps={{ 'aria-label': 'Search News by keywords'}}\r\n        onChange={(event)=>onChange(event)}\r\n        onKeyPress={(event=>onKeyPress(event))}\r\n      />\r\n       <Divider orientation=\"vertical\" flexItem />\r\n      <IconButton   className=\"search-icon\" aria-label=\"search\" onClick={(event)=>props.onSearch(event,inputValue)} >\r\n        <SearchIcon />\r\n      </IconButton>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nSearchComponent.propTypes = {\r\n  onSearch: PropTypes.func,\r\n\r\n}\r\n\r\nexport default SearchComponent","\r\nimport Axios from 'axios';\r\n\r\nexport const getNews = (subject)=>{\r\n\r\n    let date = new Date();\r\n    let fromDate = `${date.getFullYear()}-${date.getMonth()+1}-${date.getDate()}`;\r\n\r\n    return Axios.get(`http://newsapi.org/v2/everything?q=${subject}&from=${fromDate}sortBy=popularity&apiKey=9004100c7c244cb4aa12b6d74c177f0e`)\r\n}\r\n","import React, { useState, } from 'react'\r\nimport Article from './Article.js'\r\nimport Search from './Search.js'\r\nimport {getNews} from '../../services/newsAPI'\r\n\r\nimport './articles-page-style.scss'\r\n\r\nconst News=()=> {\r\n    const [articles, setArticles] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [message, setMessage] = useState(\"Powered By NewsApi\")\r\n\r\n    const fetchData = (inputValue) => {\r\n\r\n        \r\n        getNews(inputValue)\r\n            .then(res => {\r\n                \r\n                if (res.data.articles.length === 0) {\r\n                    setMessage(\"No results for this keyword\");\r\n                    setArticles([]);\r\n                }\r\n                else if (inputValue !== \"\" && JSON.stringify(articles) !== JSON.stringify(res.data.articles.slice(0, 10))) {\r\n                    setArticles(res.data.articles)\r\n                }\r\n                setLoading(false)\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setMessage(\"Fetch News Failed\");\r\n            })\r\n    }\r\n\r\n\r\n    const onSearch = (event, inputValue) => {\r\n        event.preventDefault();\r\n\r\n        if (inputValue !== '') {\r\n            setLoading(true)\r\n            fetchData(inputValue)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"news-page-container\">\r\n            <div id=\"news-page-header\"></div>\r\n            <Search onSearch={onSearch} />\r\n            {articles.length === 0 ? <h4 style={{ marginLeft: 'auto', marginRight: 'auto', fontFamily: 'georgia' }}>{message}</h4> : ''}\r\n            {articles.length !== 0 ? <div className=\"articles-container\">\r\n                {articles.map((item, index) => {\r\n\r\n                    return <Article key={index} article={item} setLoading={setLoading} loading={loading} />\r\n                })}\r\n            </div> : <div className=\"articles-container hide\"></div>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default News;","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport PropsTypes from 'prop-types'\r\n\r\n const ImageLink=({src,to,alt,target})=> {\r\n    return (\r\n        <Link to={to} target={target}>\r\n            <div id=\"main-image-container\">\r\n              <img src={src} alt={alt} />\r\n            </div>\r\n        </Link> \r\n    )\r\n}\r\n\r\nImageLink.PropsTypes={\r\n    src:PropsTypes.string,\r\n    to:PropsTypes.string,\r\n    alt:PropsTypes.string,\r\n    target:PropsTypes.string\r\n}\r\nexport default ImageLink","import React from 'react';\r\n\r\nimport ImgLink from '../utils/ImageLink'\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\n\r\nimport { toAbsoluteUrl } from '../_helpers/AssestsHelper';\r\n\r\n\r\nconst MainPageLinks=()=> {\r\n \r\n    return (\r\n        <div className=\"main-page-links-container\">\r\n            \r\n            <ImgLink src={toAbsoluteUrl('/media/icons/linksIcon.png')} to=\"/links\" alt=\"Links\"></ImgLink>\r\n            <h2>Links List</h2>\r\n            <Divider/>\r\n          \r\n            <ImgLink src={toAbsoluteUrl('/media/icons/newsIcon.png')} to=\"/news\" alt=\"News\"></ImgLink>\r\n            <h2>Search For News</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPageLinks;","import React, { useEffect, useState } from 'react';\r\nimport MainPageLinks from './MainPageLinks'\r\nimport './main-page.scss';\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Article from '../news/Article'\r\nimport { toAbsoluteUrl } from '../_helpers/AssestsHelper';\r\nimport {getNews} from '../../services/newsAPI';\r\n\r\nconst MainPage=()=> {\r\n    const [coronaArticles, setCoronaArticles] = useState([]);\r\n    const [loading,setLoading]=useState(true);\r\n\r\n    useEffect(() => {\r\n        var date = new Date();\r\n        var toDate = `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDay()}`;\r\n        var fromDate = `${date.getFullYear()}-${date.getMonth() -2}-${date.getDay()}`;\r\n        getNews('Corona',fromDate,toDate).then(res => {\r\n                setLoading(false);\r\n                setCoronaArticles(res.data.articles);\r\n            })\r\n            .catch(err => console.log(err))\r\n    },[])\r\n\r\n\r\n    return (\r\n        <div className=\"main-page-container\">\r\n           <h1>Corona Virus Latest Articles</h1>\r\n           <Divider orientation=\"horizontal\" variant='middle' />\r\n           <img id=\"main-page-image-header\"src={toAbsoluteUrl('/media/misc/coronaVirusImage.png')} alt=\"Missing\"/>\r\n            { coronaArticles.length!==0?<div className=\"articles-container\">          \r\n                {coronaArticles.map((item, index) => {\r\n                      return  (\r\n                      <Article key={index} article={item} setLoading={setLoading} loading={loading}/> )         \r\n                })}\r\n            </div>:<div className=\"articles-container hide\"></div>}\r\n            \r\n            <Divider orientation=\"horizontal\" variant='middle' />\r\n            <MainPageLinks />\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default MainPage;","import React from 'react';\nimport { BrowserRouter, Route, Switch,Redirect } from 'react-router-dom';\n\n\nimport './App.css';\n\nimport Layout from './components/layout/Layout'\nimport DisplayLinks from './components/links/DisplayLinks'\nimport News from './components/news/News'\nimport MainPage from './components/main-page/MainPage'\n\n\nfunction App() {\n  return (\n   \n    <BrowserRouter>\n      <Layout>\n      <Switch >\n        <Route exact path=\"/\" component={MainPage} />\n        <Route exact path=\"/links\" component={DisplayLinks} />\n        <Route exact path=\"/news\" component={News} />\n        <Route path=\"/*\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n      </Layout>\n    </BrowserRouter>\n  \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}